import os
from pyrogram import Client, filters
from pyrogram.types import InlineKeyboardButton, InlineKeyboardMarkup, CallbackQuery
from pyrogram.errors import UserNotParticipant
from config import Config

FORCE_SUB_CHANNELS = Config.FORCE_SUB_CHANNELS
IMAGE_URL = "https://graph.org/file/a27d85469761da836337c.jpg"

async def not_subscribed(_, __, message):
    for channel in FORCE_SUB_CHANNELS:
        try:
            user = await message._client.get_chat_member(channel, message.from_user.id)
            if user.status in {"kicked", "left"}:
                return True
        except UserNotParticipant:
            return True
    return False

@Client.on_message(filters.private & filters.create(not_subscribed))
async def forces_sub(client, message):
    not_joined_channels = []
    for channel in FORCE_SUB_CHANNELS:
        try:
            user = await client.get_chat_member(channel, message.from_user.id)
            if user.status in {"kicked", "left"}:
                not_joined_channels.append(channel)
        except UserNotParticipant:
            not_joined_channels.append(channel)

    buttons = [
        [
            InlineKeyboardButton(
                text=f"‚Ä¢ ·¥ä·¥è…™…¥ {channel.capitalize()} ‚Ä¢", url=f"https://t.me/weoo_animes"
            )
        ]
        for channel in not_joined_channels
    ]
    buttons.append(
        [
            InlineKeyboardButton(
                text="‚Ä¢ ·¥ä·¥è…™…¥·¥á·¥Ö ‚Ä¢", callback_data="check_subscription"
            )
        ]
    )

    text = "** ô·¥Ä·¥ã·¥ã·¥Ä!!,  è·¥è·¥ú' Ä·¥á …¥·¥è·¥õ ·¥ä·¥è…™…¥·¥á·¥Ö ·¥õ·¥è ·¥Ä ü ü  Ä·¥á«´·¥ú…™ Ä·¥á·¥Ö ·¥Ñ ú·¥Ä…¥…¥·¥á üs, ·¥ä·¥è…™…¥ ·¥õ ú·¥á ·¥ú·¥ò·¥Ö·¥Ä·¥õ·¥á ·¥Ñ ú·¥Ä…¥…¥·¥á üs ·¥õ·¥è ·¥Ñ·¥è…¥·¥õ…™…¥·¥ú·¥á**"
    await message.reply_photo(
        photo=IMAGE_URL,
        caption=text,
        reply_markup=InlineKeyboardMarkup(buttons)
    )

@Client.on_callback_query(filters.regex("check_subscription"))
async def check_subscription(client, callback_query: CallbackQuery):
    user_id = callback_query.from_user.id
    not_joined_channels = []

    for channel in FORCE_SUB_CHANNELS:
        try:
            user = await client.get_chat_member(channel, user_id)
            if user.status in {"kicked", "left"}:
                not_joined_channels.append(channel)
        except UserNotParticipant:
            not_joined_channels.append(channel)

    if not not_joined_channels:
        new_text = "** è·¥è·¥ú  ú·¥Ä·¥†·¥á ·¥ä·¥è…™…¥·¥á·¥Ö ·¥Ä ü ü ·¥õ ú·¥á  Ä·¥á«´·¥ú…™ Ä·¥á·¥Ö ·¥Ñ ú·¥Ä…¥…¥·¥á üs. ·¥õ ú·¥Ä…¥·¥ã  è·¥è·¥ú! üòä /start …¥·¥è·¥°**"
        if callback_query.message.caption != new_text:
            await callback_query.message.edit_caption(
                caption=new_text,
                reply_markup=InlineKeyboardMarkup([
                    [InlineKeyboardButton("‚Ä¢ …¥·¥è·¥° ·¥Ñ ü…™·¥Ñ·¥ã  ú·¥á Ä·¥á ‚Ä¢", callback_data='help')]
                ])
            )
    else:
        buttons = [
            [
                InlineKeyboardButton(
                    text=f"‚Ä¢ ·¥ä·¥è…™…¥ {channel.capitalize()} ‚Ä¢",
                    url=f"https://t.me/weoo_animes",
                )
            ]
            for channel in not_joined_channels
        ]
        buttons.append(
            [
                InlineKeyboardButton(
                    text="‚Ä¢ ·¥ä·¥è…™…¥·¥á·¥Ö ‚Ä¢", callback_data="check_subscription"
                )
            ]
        )

        text = "** è·¥è·¥ú  ú·¥Ä·¥†·¥á ·¥ä·¥è…™…¥·¥á·¥Ö ·¥Ä ü ü ·¥õ ú·¥á  Ä·¥á«´·¥ú…™ Ä·¥á·¥Ö ·¥Ñ ú·¥Ä…¥…¥·¥á üs. ·¥ò ü·¥á·¥Äs·¥á ·¥ä·¥è…™…¥ ·¥õ ú·¥á ·¥ú·¥ò·¥Ö·¥Ä·¥õ·¥á ·¥Ñ ú·¥Ä…¥…¥·¥á üs ·¥õ·¥è ·¥Ñ·¥è…¥·¥õ…™…¥·¥ú·¥á**"
        if callback_query.message.caption != text:
            await callback_query.message.edit_caption(
                caption=text,
                reply_markup=InlineKeyboardMarkup(buttons)
      )
